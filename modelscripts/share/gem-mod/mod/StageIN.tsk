# Upload data files to backend

printf "\n=====>  StageIN.tsk starts: `date` ###########\n\n"

nthreads=$(nodeinfo -n ${SEQ_NODE} | grep node.cpu= | cut -d '=' -f 2)
nthreads=${nthreads##*x}
if [ $nthreads -lt 1 ] ; then nthreads=1 ; fi

abort_prefix=UploadTSK_abort_

nb_cfg=$(ls -1d ${TASK_INPUT}/cfg_* | wc -l)
if [ $nb_cfg -lt 1 ] ; then nb_cfg=1 ; fi
sub_par=$((nthreads/nb_cfg))
if [ $sub_par -lt 1 ] ; then sub_par=1 ; fi

# Treat ${TASK_INPUT}/shared
file=${TASK_INPUT}/shared
bname=$(basename ${file})
listing=StageIN_${bname}.lis
date
${TASK_BIN}/upload -inrep ${file} -nthreads ${sub_par} -abortf ${abort_prefix}${bname} 1> ${listing} 2>&1 &
wait
date

# Loop to treat multi-domains

count=0
for directory in $(ls -1d ${TASK_INPUT}/cfg_*) ${TASK_INPUT}/prep_task ; do
  count=$(( count + 1 ))
  bname=$(basename ${directory})
  listing=StageIN_${bname}.lis
  ${TASK_BIN}/upload -inrep ${directory} -nthreads ${sub_par} -abortf ${abort_prefix}${bname} 1> ${listing} 2>&1 &
  if [[ $count -eq $nthreads ]]; then
    date ; wait ; date
    count=0
  fi
done

${TASK_BIN}/Upload_binaries -bindir ${MOD_GEM_bindir} -destination ${TASK_OUTPUT}/shared/ATM_MOD

date ; wait ; date

# Check for aborted functions
touch liste_abort
find . -name "${abort_prefix}*" > liste_abort
if [[ $(cat liste_abort | wc -l) -gt 0 ]] ; then
  echo "ERROR: One or more upload function calls aborted"
  for i in $(cat liste_abort) ; do
    file=$(echo ${i##*abort_} | sed 's/_[0-9]*$//')
    cat StageIN_${file}.lis
  done
  exit 1
fi

#if [ ${MOD_GEM_clean} -gt 0 -a ${SAME_MACH} -lt 1 ] ; then
#  /bin/rm -rf ${SEQ_WORKBASE}/${SEQ_CONTAINER}/Prep${SEQ_CONTAINER_LOOP_EXT}/output/cfg_* &
#fi

date
cd ${TASK_OUTPUT}/prep_task
for directory in $(ls -1d cfg_*) ; do
  if [ -L ${directory} ] ; then
    for subd in $(ls -1d $(readlink ${directory})/*) ; do
      ln -s $subd ../${directory}
    done
  else
    mv ${directory}/* ../${directory}
  fi
done
cd ${TASK_WORK}
date

launch_model_task()
{
  set -x
  # Launch main model task
  if [[ ${SEQ_XFER} != "stop" ]] ; then
    first_index='000'
    if [[ -n "$SEQ_CONTAINER_LOOP_ARGS" ]]; then
       $SEQ_BIN/maestro -n $SEQ_CONTAINER/Runmod -s submit ${SEQ_CONTAINER_LOOP_ARGS},Runmod=${first_index} -f ${SEQ_XFER}
    else
       $SEQ_BIN/maestro -n $SEQ_CONTAINER/Runmod -s submit -l Runmod=${first_index} -f ${SEQ_XFER}
    fi
  fi
}

# Launch main model task (when NOT coupled)
if [ -z "${MOD_GEM_cpl_expname}" ] ; then launch_model_task ; fi

wait
printf "\n=====>  StageIN.tsk ends: `date` ###########\n\n"
