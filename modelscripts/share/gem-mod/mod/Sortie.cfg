printf "\n=====>  Sortie.cfg starts: `date` ###########\n\n"

# Determine the set of domains to process
SLICE_num=$(echo ${Sortie} | cut -f 1 -d "_" | sed 's/S//')
offset=$(((SLICE_num-1)*DOMAIN_wide))
SLICE_start=$((DOMAIN_start+offset))
SLICE_end=$((SLICE_start+DOMAIN_wide-1))

SRC=${SEQ_WORKBASE}/${SEQ_CONTAINER}/Runmod_download${SEQ_LOOP_EXT}

last_npass='<no value>'
if [[ $(echo ${SEQ_LOOP_EXT} | grep "\^last" | wc -w) -gt 0 ]] ; then 
  last_npass=${SRC}/last_npass
fi

# Parse transfer command
xfer_cmd=${xfer_cmd_str%% *}
xfer_args=${xfer_cmd_str#${xfer_cmd}}

if [[ ${MOD_GEM_xferl} -eq 0 ]] ; then
  gem_xferl='<no value>'
else
  gem_xferl=${MOD_GEM_xfer}/listings
fi

###########################################################################
# <input type="loop" var="gem_domain" start="${SLICE_start}" end="${SLICE_end}">
# cfg_${gem_domain} ${SRC}/cfg_${gem_domain}
# Model_npass       ${last_npass}
# </input>
############################################################################
# <executables>
# Um_output.ksh        Um_output.ksh
# Um_output_prep.ksh   Um_output_prep.ksh
# Um_output_modout.ksh Um_output_modout.ksh
# Um_output_dplusp.ksh Um_output_dplusp.ksh
# Um_reassemble.ksh    Um_reassemble.ksh
# Um_output_yyoutg.ksh Um_output_yyoutg.ksh
# yy2global            yy2global.Abs
# feseri               feseri_${BASE_ARCH}.Abs
# readlink             r.read_link
# file_transfer        ${xfer_cmd}
# </executables>
############################################################################
# <output type="loop" var="gem_domain" start="${SLICE_start}" end="${SLICE_end}">
# cfg_${gem_domain}/model/    ${MOD_GEM_xfer}/model
# cfg_${gem_domain}/pres/     ${MOD_GEM_xfer}/pres
# cfg_${gem_domain}/other/    ${MOD_GEM_xfer}
# cfg_${gem_domain}/listings/ ${gem_xferl}
# </output>
############################################################################

printf "\n=====>  Sortie.cfg ends: `date` ###########\n\n"
