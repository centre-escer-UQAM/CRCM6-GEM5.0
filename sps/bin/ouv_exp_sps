#!/bin/ksh

myself=$0
DESC='Open a new RDE experiment with pre-set SRCPATH'
USAGE="USAGE: ${myself##*/} [-h] [-v] [-f] [--dodeps]"

eval $(rdevar --shdump)

#---- Functions ------------------------------------------------------
#====
usage_long() {
         toto=$(echo -e $USAGE)
         more <<EOF
$DESC

$toto

Options:
    -h, --help     : print this help
    -v, --verbose  : increase verbosity
    -q, --quiet    : quiet mode
    -f, --force    : replace existing source path file if any
        --nodeps   : do not add known dependencies to the src path
Will produce SRCPATH for all known ARCH \$(rdevar rde_known_base_arch_list)

EOF
}

_verbose=0
_quiet=0
myforce=0
dodeps=1
EC_ARCH_LIST="${EC_ARCH_LIST:-${CONST_RDE_KNOWN_BASE_ARCH_LIST}}"
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) ((_verbose=_verbose+1));;
      (-q|--quiet) _verbose=0; _quiet=1;;
      (-f|--force) myforce=1 ;;
      (--nodeps) dodeps=0 ;;
      (-*|*) echo "ERROR: Unrecognized option $1"
         echo -e $USAGE
         echo "---- ABORT ----"
         exit 1;;
   esac
   shift
done

myverbose=
[[ ${_verbose} -gt 1 ]] && myverbose=-v || true

if [[ x$myforce == x1 ]] ; then
   srcpathfile="$(rdevar srcpathfile 2>/dev/null || true)"
   rm -f ${srcpathfile:-.rde.srcpath.dot}
fi

# if [[ x$vgrid != x  ]] ; then
#    [[ -d ${vgrid}/include ]] && vgrid_include=${vgrid}/include
#    [[ -d ${vgrid}/src ]] && vgrid_src=${vgrid}/src
# fi

if [[ x$rpncomm != x  ]] ; then
   [[ -d ${rpncomm}/include ]] && rpncomm_include=${rpncomm}/include
   [[ -d ${rpncomm}/src ]] && rpncomm_src=${rpncomm}/src
fi

if [[ x$modelutils == x  ]] ; then
   cat <<EOF
ERROR: \$modelutils not defined or does not exists
       modelutils=$modelutils
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
   exit 1
fi
if [[ x$rpnphy == x  ]] ; then
   cat <<EOF
ERROR: \$rpnphy not defined or does not exists
       rpnphy=$rpnphy
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
   exit 1
fi

if [[ x$sps == x || ! -d $sps/src ]] ; then
   cat <<EOF
ERROR: \$sps not defined or src subdir does not exists
       sps=$sps
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
   exit 1
fi



VALIDEXT="${CONST_RDESUFFIXINC} ${CONST_RDESUFFIXSRC}"
VALIDEXTWILD="$(echo ${VALIDEXT} | sed 's|\.|*.|g') $(echo ${VALIDEXT} | sed 's|\.|*/*.|g') $(echo ${VALIDEXT} | sed 's|\.|*/*/*.|g')"

SRCLIST=""
TOPDIRS=""
BINLIST=""

export RDE_COMPONENTS="vgrid rpncomm rde modelutils rpnphy sps ${RDE_COMPONENTS}"
if [[ ${dodeps} == 1 ]] ; then
   for item in ${RDE_COMPONENTS} ; do
      maindir="$(eval echo \${${item}})"  #TODO: ${!item}
      if [[ x${maindir} != x ]] ; then

         incdir="$(eval echo \${${item}_include})"  #TODO: item2=${item}_include; ${!item2}
         incdir="${incdir:-${maindir}/include}"
         incdir0="${incdir}"
         if [[ ! -d ${incdir} ]] ; then
            incdir=""
         fi

         srcdir="$(eval echo \${${item}_src})"  #TODO: item2=${item}_src; ${!item2}
         srcdir="${srcdir:-${maindir}/src}"
         srcdir0="${srcdir}"
         if [[ ! -d ${srcdir} ]] ; then
            srcdir=""
            if [[ -d ${maindir} && x"${incdir}" == x"" \
                  && x"${incdir0}" != x"/dev/null" ]] ; then
               [[ x"$(cd ${maindir} && ls ${VALIDEXTWILD} 2>/dev/null)" != x"" ]] && srcdir="${maindir}" || true
            fi
         fi

         bindir="$(eval echo \${${item}_bin})"  #TODO: item2=${item}_bin; ${!item2}
         bindir="${bindir:-${maindir}/bin}"
         if [[ ! -d ${bindir} ]] ; then
            bindir=""
            if [[ -d ${maindir} && x"${incdir}${srcdir}" == x"" \
                  && x"${incdir0}" != x"/dev/null" \
                  && x"${srcdir0}" != x"/dev/null" ]] ; then
               bindir="${maindir}"
            fi
         fi

         if [[ ${_verbose} != 0 ]] ; then
            if [[ ${_verbose} -gt 1 ]] ; then
               echo "Adding ${item}: ${maindir} : inc=${incdir} : src=${srcdir} : bin=${bindir}"
            else
               echo "Adding ${item}: ${maindir}"
            fi
         fi
         SRCLIST="${SRCLIST} ${srcdir}"
         INCLIST="${INCLIST} ${incdir}"
         BINLIST="${BINLIST} ${bindir}"
         if [[ x"${incdir}${srcdir}${bindir}" != x"" ]] ; then
            TOPDIRS="${TOPDIRS} ${maindir}"
         fi
      fi
   done
else
   SRCLIST=""
   INCLIST="${vgrid_include} ${rpncomm_include} ${modelutils}/include ${rpnphy}/include ${sps}/include" #TODO: add other RDE_COMPONENTS incdir
   TOPDIRS="${sps}"
fi

rm -f ${CONST_SRCPATHFILE}
for myarch in $EC_ARCH_LIST ; do
   myarchold=$(rdevar --arch ${myarch} base_arch)
   if [[ "x${SRCLIST}" != "x" ]] ; then
      if [[ "x${myverbose}" == "x-v" ]] ; then
         echo "+ rdeaddsrc ${myverbose} -R --arch ${myarchold} --reset --topdirs '${TOPDIRS}' ${SRCLIST}"
      fi
      rdeaddsrc ${myverbose} -R --arch ${myarchold} --reset --topdirs "${TOPDIRS}" ${SRCLIST}
   fi
   if [[ "x${myverbose}" == "x-v" ]] ; then
      echo "+ rdeaddsrc ${myverbose} -R --arch ${myarchold} --reset --include ${INCLIST}"
   fi
   rdeaddsrc ${myverbose} -R --arch ${myarchold} --reset --include ${INCLIST}
done

#Clean rdevar cache
rdevar --cc

setenvfile=$(rdevar rde_setenv_dot)
if [[ $force == 1 ]] ; then
   rm -f ${setenvfile} .ssmuse_sps
fi

if [[ ! -f ${setenvfile} ]] ; then
cat > ${setenvfile} <<EOF
if [[ -z "\${ATM_MODEL_BNDL}" ]] ; then
   . s.ssmuse.dot ${ATM_MODEL_BNDL:-NO_ATM_BNDL}
elif [[ \${ATM_MODEL_BNDL} != ${ATM_MODEL_BNDL:-NO_ATM_BNDL} ]] ; then
   cat 1>&2 <<EOF1

   ** WARNING **
   Mismatch of current \${ATM_MODEL_BNDL} in your environment and the experiment ${ATM_MODEL_BNDL:-NO_ATM_BNDL} in ${refload}
   You should probably load this experiment in a new shell.

EOF1
fi
export SPS_DEV_UPDATES="${SPS_DEV_UPDATES}"
if [[ -n "\${SPS_DEV_UPDATES}" ]] ; then . s.ssmuse.dot \${SPS_DEV_UPDATES} ; fi

export SPS_DEV_SUITE=${SPS_DEV_SUITE}
export SEQ_EXP_HOME=${SEQ_EXP_HOME}
EOF
fi

if [[ x$myforce == x1 ]] ; then
   rm -f .ssmuse_sps
fi
if [[ ! -f .ssmuse_sps ]] ; then
   ln -s ${setenvfile} .ssmuse_sps 
fi

exit 0
